@page
@model Frontend.Pages.Carrello.IndexModel
@{
    Layout = "_LayoutHome";
    ViewData["Title"] = "Carrello";
}

<div class="container mx-auto px-4 py-24">
    <div class="max-w-5xl mx-auto">
        <div class="flex items-center justify-center mb-10">
            <h1 class="text-4xl md:text-5xl font-bold text-blue-900">
                <i class="fas fa-shopping-cart mr-4 text-blue-600"></i> Il tuo carrello
            </h1>
        </div>

        @if (Model.Articoli != null && Model.Articoli.Any())
        {
            <div class="bg-white rounded-xl shadow-lg overflow-hidden">
                <!-- Header griglia a 12 colonne -->
                <div class="hidden md:grid grid-cols-12 bg-blue-900 text-white p-4 font-semibold">
                    <div class="col-span-4">Prodotto</div>
                    <div class="col-span-2 text-center">Prezzo</div>
                    <div class="col-span-1 text-center">Giacenza</div>
                    <div class="col-span-1 text-center">Disponibile</div>
                    <div class="col-span-3 text-center">Quantità</div>
                    <div class="col-span-1 text-right">Totale</div>
                </div>

                <div class="divide-y divide-gray-200">
                    @foreach (var articolo in Model.Articoli)
                    {
                        <div class="grid grid-cols-1 md:grid-cols-12 p-4 items-center hover:bg-blue-50 transition">
                            <!-- Prodotto -->
                            <div class="col-span-4 flex items-center mb-4 md:mb-0">
                                <img src="@Model.GetImmagineUrl(articolo.ImgPath)" alt="@articolo.NomeProdotto"
                                     class="w-20 h-20 object-cover rounded-lg border border-gray-200 mr-4">
                                <div>
                                    <h3 class="font-semibold text-lg">@articolo.NomeProdotto</h3>
                                    <p class="text-gray-500 text-sm">Codice: @articolo.Id</p>
                                </div>
                            </div>

                            <!-- Prezzo -->
                            <div class="col-span-2 text-center text-blue-900 font-medium mb-4 md:mb-0">
                                @articolo.Prezzo.ToString("C")
                            </div>

                            <!-- Giacenza -->
                            <div class="col-span-1 text-center text-blue-900 font-medium mb-4 md:mb-0 quantita-magazzino"
                                 data-id="@articolo.Id">
                                @articolo.Giacenza
                            </div>


                            <!-- Disponibile -->
                            <div class="col-span-1 text-center text-blue-900 font-medium mb-4 md:mb-0 quantita-disponibile"
                                 data-id="@articolo.Id">
                                @articolo.QuantitaDisponibile
                            </div>

                            <!-- Quantità selezionata -->
                            <div class="col-span-3 flex justify-center items-center mb-4 md:mb-0">
                                <div class="flex items-center border rounded-full">
                                    <button onclick="aggiornaQuantita(@articolo.Id, -1)"
                                            class="px-3 py-1 text-gray-500 hover:text-blue-700"
                                            id="minus-btn-@articolo.Id"
                                    @(articolo.Quantita <= 1 ? "disabled" : "")>
                                        <i class="fas fa-minus"></i>
                                    </button>
                                    <span class="px-4 font-semibold" id="quantita-@articolo.Id">
                                        @(articolo.Quantita < 1 ? 1 : articolo.Quantita)
                                    </span>
                                    <button onclick="aggiornaQuantita(@articolo.Id, 1)"
                                            class="px-3 py-1 text-gray-500 hover:text-blue-700"
                                            id="plus-btn-@articolo.Id"
                                    @(articolo.Quantita >= articolo.QuantitaDisponibile ? "disabled" : "")>
                                        <i class="fas fa-plus"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Azioni e Totale riga -->
                            <div class="col-span-1 flex justify-end items-center space-x-2">
                                <button onclick="rimuoviDalCarrello(@articolo.Id)"
                                        class="text-red-500 hover:text-red-700 p-2 rounded-full hover:bg-red-100 transition">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                                <a asp-page="/Prodotti/Detail" asp-route-id="@articolo.Id"
                                   class="text-green-500 hover:text-green-700 p-2 rounded-full hover:bg-green-100 transition">
                                    <i class="fas fa-shopping-bag"></i>
                                </a>
                                <span class="hidden md:inline-block font-semibold text-blue-900">
                                    @(articolo.Prezzo * articolo.Quantita)
                                </span>
                            </div>
                        </div>
                    }
                </div>

                <!-- Totale complessivo -->
                <div class="bg-gray-50 p-6 border-t">
                    <div class="flex justify-between items-center">
                        <h3 class="text-lg font-semibold text-gray-700">Totale provvisorio</h3>
                        <div class="text-2xl font-bold text-blue-900">
                            @Model.Articoli.Sum(a => a.Prezzo * a.Quantita).ToString("C")
                        </div>
                    </div>
                    <div class="mt-6 flex flex-col sm:flex-row justify-end space-y-3 sm:space-y-0 sm:space-x-4">
                        <a href="/"
                           class="px-6 py-3 border border-blue-900 text-blue-900 rounded-lg hover:bg-blue-50 transition text-center">
                            <i class="fas fa-arrow-left mr-2"></i> Continua lo shopping
                        </a>
                        <form method="post" asp-page-handler="PayFromCart">
                            <button type="submit"
                                    class="px-6 py-3 bg-blue-900 text-white rounded-lg hover:bg-blue-800 transition text-center">
                                Procedi all'ordine <i class="fas fa-arrow-right ml-2"></i>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center bg-white rounded-xl shadow-lg p-12">
                <i class="fas fa-shopping-cart text-6xl text-gray-300 mb-6"></i>
                <h3 class="text-2xl font-semibold text-gray-700 mb-2">Il tuo carrello è vuoto</h3>
                <p class="text-gray-500 mb-6">Aggiungi alcuni articoli prima di procedere al checkout</p>
                <a href="/" class="inline-block px-6 py-3 bg-blue-900 text-white rounded-lg hover:bg-blue-800 transition">
                    <i class="fas fa-store-alt mr-2"></i> Esplora i prodotti
                </a>
            </div>
        }
    </div>
</div>

<!-- Script per rimozione -->
<script>
    async function rimuoviDalCarrello(prodottoId) {
        if (!confirm('Sei sicuro di voler rimuovere questo articolo dal carrello?')) return;
        try {
            const response = await fetch(`http://localhost:5150/api/carrello/${prodottoId}`, {
                method: "DELETE",
                credentials: "include",
                headers: { "Content-Type": "application/json" }
            });
            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message);
            }
            location.reload();
        } catch (err) {
            alert(`Errore: ${err.message}`);
        }
    }
</script>

<!-- Script per aggiornamento quantità -->
<script>
    async function aggiornaQuantita(prodottoId, delta) {
        const quantitaSpan = document.getElementById(`quantita-${prodottoId}`);
        let nuovaQuantita = parseInt(quantitaSpan.textContent) + delta;
        if (nuovaQuantita < 1 || nuovaQuantita > 99) return;

        try {
            const response = await fetch(`http://localhost:5150/api/carrello/aggiornaQuantitaArticolo?prodottoId=${prodottoId}&quantita=${nuovaQuantita}`, {
                method: "PUT",
                credentials: "include",
                headers: { "Content-Type": "application/json" }
            });

            if (!response.ok) throw new Error("Errore durante aggiornamento");

            quantitaSpan.textContent = nuovaQuantita;
            document.getElementById(`minus-btn-${prodottoId}`).disabled = nuovaQuantita <= 1;
            document.getElementById(`plus-btn-${prodottoId}`).disabled = nuovaQuantita >= 99;

        } catch (err) {
            alert(`Errore: ${err.message}`);
        }
    }
</script>

<!-- SignalR (immutato) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const signalRUrl = `http://localhost:5150/prodottoHub`;

    const connection = new signalR.HubConnectionBuilder()
        .withUrl(signalRUrl)
        .configureLogging(signalR.LogLevel.Information)
        .build();

    connection.on("QuantitaDisponibileAggiornata", function (prodottoId, nuovaQuantita) {
        const cell = document.querySelector(`.quantita-disponibile[data-id='${prodottoId}']`);
        if (cell) cell.textContent = nuovaQuantita;

        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-yellow-500 text-white px-6 py-3 rounded-lg shadow-lg animate-fade-in';
        notification.innerHTML = `<i class="fas fa-info-circle mr-2"></i> Disponibilità aggiornata: ${nuovaQuantita}`;
        document.body.appendChild(notification);
        setTimeout(() => {
            notification.classList.add('animate-fade-out');
            setTimeout(() => notification.remove(), 500);
        }, 3000);
    });

        connection.on("QuantitaMagazzinoAggiornata", function (prodottoId, nuovaQtMagazzino) {
        const cellMagazzino = document.querySelector(`.quantita-magazzino[data-id='${prodottoId}']`);
        if (cellMagazzino) cellMagazzino.textContent = nuovaQtMagazzino;

        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-green-600 text-white px-6 py-3 rounded-lg shadow-lg animate-fade-in';
        notification.innerHTML = `<i class="fas fa-warehouse mr-2"></i> Magazzino aggiornato: ${nuovaQtMagazzino}`;
        document.body.appendChild(notification);
        setTimeout(() => {
            notification.classList.add('animate-fade-out');
            setTimeout(() => notification.remove(), 500);
        }, 3000);
    });


    connection.start()
        .then(() => console.log("SignalR connesso"))
        .catch(err => console.error("Errore SignalR:", err));
</script>

